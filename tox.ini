[tox]
envlist = py37
skipsdist = True

[testenv]
basepython = python3.7
install_command = {basepython} {envdir}/bin/pip install {opts} {packages}
list_dependencies_command = {basepython} {envdir}/bin/pip freeze
deps =
    -r{toxinidir}/requirements.txt

[testenv:test]
skip_install = true
deps =
whitelist_externals =
    bash
commands =
    bash -c '. venv/bin/activate && python manage.py test'

[testenv:lint]
skip_install = true
deps =
    pydocstyle
    flake8
    flake8-broken-line
    flake8-bugbear
    flake8-builtins
    flake8-colors
    flake8-commas
    flake8-comprehensions
    flake8-docstrings
    flake8-eradicate
    flake8-import-order
    flake8-logging-format
    flake8-quotes
    flake8-self
    pep8-naming
    radon
commands =
    {basepython} {envdir}/bin/flake8 {posargs}

[testenv:clean]
deps =
skip_install = true
whitelist_externals =
    bash
    find
    rm
commands =
    find . -name "*.py[co]" -delete
    bash -c 'find . -name "__pycache__" -exec rm -fr \{\} \; -prune'
    bash -c 'find . -depth -name "*.egg-info" -exec rm -fr \{\} \;'
    rm -rf .tox
    bash -c './scripts/clean.sh y'



; Reference for error codes:
; http://www.pydocstyle.org/en/latest/error_codes.html
[flake8]
enable-extensions = G
exclude =
    .tox
    .git
    __pycache__
    uploads
    downloads
    static
    templates
    logs
    venv
    DynamicAnalyzer/tools/adb/
    StaticAnalyzer/migrations/
    StaticAnalyzer/tools/enjarify/
ignore =
    D100
    D101
    D102
    D103
    D104
    D105
    D107
    D401
    W503
    Q003 ; Allow only ' for strings
    SF01 ; Allow private member access
    I100 ; Use python sort imports
    R701 ; TODO fix this later too complex
    N400 ; For ASCII art
    ; remove # flake8: noqa from manifest_analysis.py, should be fixed with R701
radon_max_cc = 10
