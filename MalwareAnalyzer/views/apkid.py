# -*- coding: utf_8 -*-
import os
import logging
from django.conf import settings

logger = logging.getLogger(__name__)


def apkid_analysis(app_dir, apk_file):
    """APKiD Analysis of DEX file"""
    if settings.APKID_ENABLED:
        dex_file = app_dir + 'classes.dex'
        if not os.path.exists(dex_file):
            logger.info("APKiD - Package does not contains classes.dex file!")
            return {'error': True}
        from StaticAnalyzer.tools.apkid import apkid
        apkid_dict = {}
        apkid_dict2 = {'apkid_version': '', 'anti_vm': '', 'compiler': '', 'packer': '', 'obfuscator': '',
                       'abnormal': '', 'anti_disassembly': '', 'anti_debug': '', 'dropper': '', 'manipulator': ''}
        logger.info("APKiD Analysis on Dex file : %s", dex_file)
        result = apkid.scan(app_dir, 30, True)
        dict_string = str(result)
        nb_occur = dict_string.count("filename") - 1
        for i in range(0, nb_occur, 1):
            if "files" in result:
                apkid_dict["result"] = result["files"][i]["results"]
            if "apkid_version" in result:
                apkid_dict2["apkid_version"] = result["apkid_version"]
            if apkid_dict['result'].get('anti_vm', ''):
                apkid_dict2['anti_vm'] = apkid_dict[
                    'result'].get('anti_vm', '')
            if apkid_dict['result'].get('compiler', ''):
                apkid_dict2['compiler'] = apkid_dict[
                    'result'].get('compiler', '')
            if apkid_dict['result'].get('packer', ''):
                apkid_dict2['packer'] = apkid_dict['result'].get('packer', '')
            if apkid_dict['result'].get('obfuscator', ''):
                apkid_dict2['obfuscator'] = apkid_dict[
                    'result'].get('obfuscator', '')
            if apkid_dict['result'].get('abnormal'):
                apkid_dict2['abnormal'] = apkid_dict[
                    'result'].get('abnormal', '')
            if apkid_dict['result'].get('anti_disassembly', ''):
                apkid_dict2['anti_disassembly'] = apkid_dict[
                    'result'].get('anti_disassembly', '')
            if apkid_dict['result'].get('anti_debug', ''):
                apkid_dict2['anti_debug'] = apkid_dict[
                    'result'].get('anti_debug', '')
            if apkid_dict['result'].get('dropper', ''):
                apkid_dict2['dropper'] = apkid_dict[
                    'result'].get('dropper', '')
            if apkid_dict['result'].get('manipulator', ''):
                apkid_dict2['manipulator'] = apkid_dict[
                    'result'].get('manipulator', '')
            apkid_dict.clear()
        return apkid_dict2
    return {}
